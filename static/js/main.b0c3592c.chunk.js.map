{"version":3,"sources":["components/TodoAdd.js","components/Todo.js","components/TodoList.js","components/Form.js","index.js"],"names":["TodoAdd","todos","setTodos","useState","inputText","setInputText","class","TextField","placeholder","value","onChange","e","preventDefault","console","log","target","type","required","PrimaryButton","id","onClick","newToDo","description","isDone","requestOptions","method","headers","body","JSON","stringify","fetch","process","then","o","json","data","addTodoPost","alert","Todo","todo","className","selectedToDo","map","item","markToDoPost","checked","TodoList","done","Form","showTodoDiv","setShowAddTodoDiv","showAllTodos","setShowAllTodos","useEffect","handleShowAddTodo","Toggle","label","onText","offText","defaultChecked","DefaultButton","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0c3592c.chunk.js","sourcesContent":["import { TextField, PrimaryButton } from \"@fluentui/react\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction TodoAdd({ todos, setTodos }) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  const addTodoPost = () => {\r\n    const newToDo = { description: inputText, isDone: false };\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Headers\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(newToDo),\r\n    };\r\n    fetch(process.env.REACT_APP_API_ENDPOINT + \"ToDo/Add\", requestOptions)\r\n      .then((o) => o.json())\r\n      .then((data) => {\r\n        newToDo.id = data;\r\n        setTodos([...todos, newToDo]);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.value);\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const handleAddTodo = (e) => {\r\n    e.preventDefault();\r\n    if (inputText == \"\") {\r\n      alert(\"Please add a ToDo\");\r\n      return;\r\n    }\r\n    addTodoPost();\r\n    setInputText(\"\");\r\n  };\r\n\r\n  return (\r\n    <div class=\"input-group mb-3\">\r\n      <TextField\r\n        class=\"form-goup\"\r\n        placeholder=\"add todo\"\r\n        value={inputText}\r\n        onChange={handleInputChange}\r\n        type=\"text\"\r\n        required\r\n      />\r\n      <PrimaryButton\r\n        class=\"btn btn-outline-primary\"\r\n        type=\"button\"\r\n        id=\"button-addon2\"\r\n        onClick={handleAddTodo}\r\n      >\r\n        Add Todo\r\n      </PrimaryButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoAdd;\r\n","import React from \"react\";\r\n\r\nfunction Todo({ description, todo, setTodos }) {\r\n  const markToDoPost = () => {\r\n    debugger;\r\n    const selectedToDo = { id: todo.id, isDone: todo.isDone };\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Headers\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(selectedToDo),\r\n    };\r\n    fetch(process.env.REACT_APP_API_ENDPOINT + \"ToDo/MarkToDo\", requestOptions)\r\n      //.then((o) => o.json())\r\n      .then(() => {\r\n        setTodos((todos) =>\r\n          todos.map((item) => {\r\n            if (item.id === todo.id) {\r\n              return { ...item, isDone: selectedToDo.isDone };\r\n            }\r\n            return item;\r\n          })\r\n        );\r\n      });\r\n  };\r\n\r\n  const handleDone = () => {\r\n    todo.isDone = !todo.isDone;\r\n    markToDoPost();\r\n    // setTodos((todos) =>\r\n    //   todos.map((item) => {\r\n    //     if (item.id === todo.id) {\r\n    //       return { ...item, done: !item.done };\r\n    //     }\r\n    //     return item;\r\n    //   })\r\n    // );\r\n  };\r\n  return (\r\n    <>\r\n      <li className={`list-items ${todo.isDone ? \"completed\" : \"\"}`}>\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          onChange={handleDone}\r\n          id=\"flexCheckDefault\"\r\n          checked={todo.isDone}\r\n        />\r\n\r\n        <span>{description}</span>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList({ todos, setTodos }) {\r\n  return (\r\n    <div className=\"todoList\">\r\n      <ul className=\"list-group\">\r\n        {todos.map((item) => (\r\n          <Todo\r\n            key={item.id}\r\n            description={item.description}\r\n            done={item.isDone}\r\n            todo={item}\r\n            setTodos={setTodos}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport TodoAdd from \"./TodoAdd\";\r\nimport TodoList from \"./TodoList\";\r\nimport { DefaultButton, PrimaryButton, Toggle } from \"@fluentui/react\";\r\n\r\nfunction Form() {\r\n  const [showTodoDiv, setShowAddTodoDiv] = useState(false);\r\n  const [showAllTodos, setShowAllTodos] = useState(true);\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const url = process.env.REACT_APP_API_ENDPOINT + \"ToDo/GetAll\";\r\n    fetch(url)\r\n      .then((o) => o.json())\r\n      .then((o) => setTodos(o));\r\n  }, []);\r\n\r\n  const handleShowAddTodo = () => {\r\n    setShowAddTodoDiv(!showTodoDiv);\r\n  };\r\n\r\n  const handleShowTodos = () => {\r\n    setShowAllTodos(!showAllTodos);\r\n  };\r\n\r\n  // const [todos, setTodos] = useState(\r\n  //   localStorage.getItem(\"todos\")\r\n  //     ? JSON.parse(localStorage.getItem(\"todos\"))\r\n  //     : []\r\n  // );\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  // }, [todos]);\r\n\r\n  return (\r\n    <>\r\n      <h1>To-Do App</h1>\r\n      <hr />\r\n      <Toggle\r\n        label={<div>Show tasks</div>}\r\n        onText=\"All\"\r\n        offText=\"Pending\"\r\n        onChange={handleShowTodos}\r\n        defaultChecked\r\n      />\r\n      <hr />\r\n      {showTodoDiv ? (\r\n        <>\r\n          <TodoAdd todos={todos} setTodos={setTodos} />\r\n          <DefaultButton onClick={handleShowAddTodo} className=\"cancelButton\">\r\n            Cancel\r\n          </DefaultButton>\r\n        </>\r\n      ) : (\r\n        <PrimaryButton onClick={handleShowAddTodo}>+ Add New</PrimaryButton>\r\n      )}\r\n      <TodoList\r\n        todos={\r\n          showAllTodos ? todos : todos.filter((item) => item.isDone === false)\r\n        }\r\n        setTodos={setTodos}\r\n      />\r\n      {/* <DefaultButton onClick={handleShowAllTodos}>Show All</DefaultButton>\r\n      <DefaultButton onClick={handleShowUndoneTodos}>\r\n        Pending Tasks\r\n      </DefaultButton> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Form from \"./components/Form\";\nimport \"./index.css\";\n\nReactDOM.render(<Form />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}